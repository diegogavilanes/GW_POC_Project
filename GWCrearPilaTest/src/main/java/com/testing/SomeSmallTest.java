package com.testing;

import org.graphwalker.core.machine.ExecutionContext;
import org.graphwalker.java.annotation.AfterExecution;
import org.graphwalker.java.annotation.BeforeExecution;
import org.graphwalker.java.annotation.GraphWalker;



/**
 * Implements the GraphWalker model: src/main/resources/SmallTest.json
 * <p/>
 * The interface SmallTest, that SomeSmallTest implements, is generated by
 * running: mvn graphwalker:generate-sources
 * also: mvn compile
 */
@GraphWalker(
        value = "random(edge_coverage(100))",
        start = "e_CrearMazo"
)

public class SomeSmallTest extends ExecutionContext implements CrearPila {

    @Override
    public void v_VerificarMazo() {
        System.out.println("Running: e_FirstAction");


    }

    @Override
    public void e_AdherirAPila() {
        System.out.println("Running: e_AnotherAction");

    }

    @Override
    public void e_CrearMazo() {
        System.out.println("Running: e_SomeAction");
        

    }

    @Override
    public void e_DarCarta() {
        System.out.println("Running: e_SomeOtherAction");
    }

    @Override
    public void v_ListarPila() {
        System.out.println("Running: v_VerifyInitialState");
    }

    @Override
    public void v_MazoEnJuego() {
        System.out.println("Running: v_VerifyFirstAction");
    }
}
